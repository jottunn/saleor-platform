services:
  api:
    pull_policy: always
    build:
      context: .
      dockerfile: ./docker/saleor-core/Dockerfile
    labels:
      # Base traefik enable
      - "traefik.enable=true"
      # JWKS route
      - "traefik.http.services.jwks-service.loadbalancer.server.port=8000"
      - "traefik.http.routers.jwks.rule=Host(`surmont.ro`) && PathPrefix(`/.well-known`)"
      - "traefik.http.routers.jwks.service=jwks-service"
      - "traefik.http.routers.jwks.entrypoints=websecure"
      - "traefik.http.routers.jwks.tls=true"
      - "traefik.http.routers.jwks.tls.certresolver=cloudflare"
      # Service definitions
      - "traefik.http.services.graphql-service.loadbalancer.server.port=8000"
      - "traefik.http.services.media-service.loadbalancer.server.port=8000"
      - "traefik.http.services.thumbnail-service.loadbalancer.server.port=8000"
      # GraphQL API route
      - "traefik.http.routers.graphql.rule=Host(`surmont.ro`) && PathPrefix(`/graphql`)"
      - "traefik.http.routers.graphql.service=graphql-service"
      - "traefik.http.routers.graphql.entrypoints=websecure"
      - "traefik.http.routers.graphql.tls=true"
      - "traefik.http.routers.graphql.tls.certresolver=cloudflare"
      # Media handling route
      - "traefik.http.routers.media.rule=Host(`surmont.ro`) && PathPrefix(`/media`)"
      - "traefik.http.routers.media.service=media-service"
      - "traefik.http.routers.media.entrypoints=websecure"
      - "traefik.http.routers.media.tls=true"
      - "traefik.http.routers.media.tls.certresolver=cloudflare"
      # Thumbnail handling route
      - "traefik.http.routers.thumbnail.rule=Host(`surmont.ro`) && PathPrefix(`/thumbnail`)"
      - "traefik.http.routers.thumbnail.service=thumbnail-service"
      - "traefik.http.routers.thumbnail.entrypoints=websecure"
      - "traefik.http.routers.thumbnail.tls=true"
      - "traefik.http.routers.thumbnail.tls.certresolver=cloudflare"
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    stdin_open: true
    tty: true
    depends_on:
      - db
      - redis
    volumes:
      # shared volume between worker and api for media
      - saleor-media:/app/media
      - /etc/localtime:/etc/localtime:ro
      - ./credentials.json:/app/credentials.json:ro  # Mount your GCP credentials
    env_file:
      - common.env
      - backend.env

  dashboard:
    pull_policy: always
    image: ghcr.io/saleor/saleor-dashboard:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.saleor-dashboard.rule=Host(`surmont.ro`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.saleor-dashboard.entrypoints=websecure"
      - "traefik.http.routers.saleor-dashboard.tls=true"
      - "traefik.http.routers.saleor-dashboard.tls.certresolver=cloudflare"
      - "traefik.http.services.saleor-dashboard.loadbalancer.server.port=80"
    networks:
      - saleor-backend-tier
    env_file:
      - frontend.env
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro

  db:
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    ports:
      - 5432:5432
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-db:/var/lib/postgresql/data
      - ./replica_user.sql:/docker-entrypoint-initdb.d/replica_user.sql
#      - ./docker/db/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - backend.env

  redis:
    image: library/redis:7.0-alpine
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    volumes:
      - saleor-redis:/data
      - /etc/localtime:/etc/localtime:ro

  worker:
    build:
      context: .
      dockerfile: ./docker/saleor-core/Dockerfile
    command: celery -A saleor --app=saleor.celeryconf:app worker --loglevel=debug
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    env_file:
      - common.env
      - backend.env
    depends_on:
      - redis
    volumes:
      # shared volume between worker and api for media
      - saleor-media:/app/media
      - /etc/localtime:/etc/localtime:ro
      - ./credentials.json:/app/credentials.json:ro  # Mount your GCP credentials
      - type: tmpfs
        target: /tmp

  beat:
    build:
      context: .
      dockerfile: ./docker/saleor-core/Dockerfile
    command: celery -A saleor --app=saleor.celeryconf:app beat --loglevel=debug
    restart: unless-stopped
    networks:
      - saleor-backend-tier
    env_file:
      - common.env
      - backend.env
    depends_on:
      - redis
    volumes:
      # shared volume between worker and api for media
      - saleor-media:/app/media
      - /etc/localtime:/etc/localtime:ro
      - ./credentials.json:/app/credentials.json:ro  # Mount your GCP credentials

volumes:
  saleor-db:
    driver: local
  saleor-redis:
    driver: local
  saleor-media:

networks:
  saleor-backend-tier:
    name: saleor-backend-tier
    driver: bridge
    attachable: true